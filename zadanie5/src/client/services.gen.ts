// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { CreateProductData, CreateProductResponse, GetProductsData, GetProductsResponse, GetProductByIdData, GetProductByIdResponse, PatchProductsByProductIdData, PatchProductsByProductIdResponse, DeleteProductByIdData, DeleteProductByIdResponse, CreateCartData, CreateCartResponse, GetCartsData, GetCartsResponse, GetCartByIdData, GetCartByIdResponse, PatchCartsByCartIdData, PatchCartsByCartIdResponse, DeleteCartByIdData, DeleteCartByIdResponse, CreatePaymentData, CreatePaymentResponse, GetPaymentsData, GetPaymentsResponse, GetPaymentByIdData, GetPaymentByIdResponse, UpdatePaymentByIdData, UpdatePaymentByIdResponse, DeletePaymentByIdData, DeletePaymentByIdResponse } from './types.gen';

export class ProductsService {
    /**
     * @param data The data for the request.
     * @param data.body
     * @returns ProductResponse
     * @throws ApiError
     */
    public static createProduct(data: CreateProductData): CancelablePromise<CreateProductResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/products',
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @returns ProductResponseArray
     * @throws ApiError
     */
    public static getProducts(data: GetProductsData = {}): CancelablePromise<GetProductsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/products',
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId Product ID
     * @returns ProductResponse
     * @throws ApiError
     */
    public static getProductById(data: GetProductByIdData): CancelablePromise<GetProductByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/products/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId Product ID
     * @param data.body
     * @returns ProductResponse
     * @throws ApiError
     */
    public static patchProductsByProductId(data: PatchProductsByProductIdData): CancelablePromise<PatchProductsByProductIdResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/products/{productId}',
            path: {
                productId: data.productId
            },
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.productId Product ID
     * @returns void
     * @throws ApiError
     */
    public static deleteProductById(data: DeleteProductByIdData): CancelablePromise<DeleteProductByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/products/{productId}',
            path: {
                productId: data.productId
            }
        });
    }
    
}

export class CartsService {
    /**
     * @param data The data for the request.
     * @param data.body
     * @returns CartResponse
     * @throws ApiError
     */
    public static createCart(data: CreateCartData): CancelablePromise<CreateCartResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/carts',
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @returns CartResponseArray
     * @throws ApiError
     */
    public static getCarts(data: GetCartsData = {}): CancelablePromise<GetCartsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/carts',
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.cartId Product ID
     * @returns CartResponse
     * @throws ApiError
     */
    public static getCartById(data: GetCartByIdData): CancelablePromise<GetCartByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/carts/{cartId}',
            path: {
                cartId: data.cartId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.cartId Cart ID
     * @param data.body
     * @returns CartResponse
     * @throws ApiError
     */
    public static patchCartsByCartId(data: PatchCartsByCartIdData): CancelablePromise<PatchCartsByCartIdResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/carts/{cartId}',
            path: {
                cartId: data.cartId
            },
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.cartId Cart ID
     * @returns void
     * @throws ApiError
     */
    public static deleteCartById(data: DeleteCartByIdData): CancelablePromise<DeleteCartByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/carts/{cartId}',
            path: {
                cartId: data.cartId
            }
        });
    }
    
}

export class PaymentsService {
    /**
     * @param data The data for the request.
     * @param data.body
     * @returns PaymentResponse
     * @throws ApiError
     */
    public static createPayment(data: CreatePaymentData): CancelablePromise<CreatePaymentResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/payments',
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.offset
     * @param data.limit
     * @returns PaymentResponseArray
     * @throws ApiError
     */
    public static getPayments(data: GetPaymentsData = {}): CancelablePromise<GetPaymentsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/payments',
            query: {
                offset: data.offset,
                limit: data.limit
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.paymentId Payment ID
     * @returns PaymentResponse
     * @throws ApiError
     */
    public static getPaymentById(data: GetPaymentByIdData): CancelablePromise<GetPaymentByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/payments/{paymentId}',
            path: {
                paymentId: data.paymentId
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.paymentId Payment ID
     * @param data.body
     * @returns PaymentResponse
     * @throws ApiError
     */
    public static updatePaymentById(data: UpdatePaymentByIdData): CancelablePromise<UpdatePaymentByIdResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/payments/{paymentId}',
            path: {
                paymentId: data.paymentId
            },
            body: data.body
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.paymentId Payment ID
     * @returns void
     * @throws ApiError
     */
    public static deletePaymentById(data: DeletePaymentByIdData): CancelablePromise<DeletePaymentByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/payments/{paymentId}',
            path: {
                paymentId: data.paymentId
            }
        });
    }
    
}